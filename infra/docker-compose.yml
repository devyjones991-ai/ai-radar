networks:
  ai-radar-network:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: ai-radar-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./logs:/var/log
    networks:
      - ai-radar-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    container_name: ai-radar-n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=http
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${TZ}
      - N8N_LOG_LEVEL=info
      - N8N_METRICS=true
    ports:
      - "${N8N_PORT}:5678"
    volumes:
      - ./data/n8n:/home/node/.n8n
      - ./workflows:/home/node/workflows
      - ./logs:/home/node/logs
    networks:
      - ai-radar-network
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ai-memory-service:
    image: node:15-alpine
    container_name: ai-radar-memory
    restart: unless-stopped
    working_dir: /app
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - TZ=${TZ}
    volumes:
      - ./scripts:/app
      - ./data/ollama-memory:/app/data
      - ./logs:/app/logs
    networks:
      - ai-radar-network
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["sleep", "infinity"]  # Запустится позже

volumes:
  postgres_data:
  n8n_data:
  ollama_memory:


