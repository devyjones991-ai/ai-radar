name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: ai_radar_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_radar_test
        options: >-
          --health-cmd "pg_isready -U postgres -d ai_radar_test" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Docker Compose plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Validate Docker Compose configuration
        run: docker compose -f infra/docker-compose.yml config

      - name: Проверка health-check стека
        run: ./infra/tests/stack-health-check.sh

      - name: Tear down environment
        if: always()
        run: docker compose -f infra/docker-compose.yml down --volumes

  scripts:
    name: Scripts Service CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: scripts
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: scripts/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
